on:
  push:
    branches:
      - "main"
    tags:
      - "v*"
      - "rc*"
  pull_request:

name: Test and publish

permissions:
  contents: write
  deployments: write
  issues: write
  packages: write

env:
  CC_BINARY_URL: https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64
  GO_VERSION: '1.21'

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v4
        with:
          go-version: "${{ env.GO_VERSION }}"
      - uses: actions/checkout@v3
      - name: Run tests
        run: |
          export GIT_COMMIT_SHA='${{ github.sha }}'
          export GIT_BRANCH="$(echo '${{ github.ref }}' | sed -E -e 's/.*\/(.*)/\1/')"
          echo "Running tests..."
          mkdir unitcoverage
          go test -cover $(go list ./... | grep -v integration_test) -args -test.gocoverdir="$PWD/unitcoverage"
      - uses: actions/upload-artifact@v3
        with:
          name: unit-test-coverage
          path: ./unitcoverage/

  publish:
    name: Goreleaser
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Write .env file
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          touch .env
          echo GITHUB_TOKEN="$GITHUB_TOKEN" >> .env

      - name: Login to GHCR
        uses: docker/login-action@v2
        if: "!startsWith(github.ref, 'refs/tags/v')"
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: goreleaser release preview
        run: make release-preview
        if: "!startsWith(github.ref, 'refs/tags/v')"

      - name: remove slash from image tag
        uses: mad9000/actions-find-and-replace-string@3
        id: replaceslash
        with:
          source: ${{ github.head_ref || github.ref_name }}
          find: '/'
          replace: '-'
        if: "!startsWith(github.ref, 'refs/tags/v')"

      - name: Tag Docker images appropriately
        run: >
          docker tag ghcr.io/denisandreenko/signatory:${{ github.sha }}-amd64 ghcr.io/denisandreenko/signatory:${{ steps.replaceslash.outputs.value }}-amd64;
          docker tag ghcr.io/denisandreenko/signatory:${{ github.sha }}-arm64 ghcr.io/denisandreenko/signatory:${{ steps.replaceslash.outputs.value }}-arm64;
          docker tag ghcr.io/denisandreenko/signatory:${{ github.sha }}-armv7 ghcr.io/denisandreenko/signatory:${{ steps.replaceslash.outputs.value }}-armv7;
        if: "!startsWith(github.ref, 'refs/tags/v')"

      - name: Push Signatory preview images to GH Container Registry
        run: >
         docker push ghcr.io/denisandreenko/signatory:${{ steps.replaceslash.outputs.value }}-amd64;
         docker push ghcr.io/denisandreenko/signatory:${{ steps.replaceslash.outputs.value }}-arm64;
         docker push ghcr.io/denisandreenko/signatory:${{ steps.replaceslash.outputs.value }}-armv7;
        if: "!startsWith(github.ref, 'refs/tags/v')"

      - name: goreleaser release
        run: make release
        if: startsWith(github.ref, 'refs/tags/v')
